/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <27>; };

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        repo_jump: repo_jump {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_wait_time 250>,
                <&macro_tap>,
                <&kp SPACE &kp Q>,
                <&macro_release>;

            label = "REPO_JUMP";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB     &kp Q  &kp W  &kp E             &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp CAPS    &kp A  &kp S  &kp D             &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHIFT  &kp Z  &kp X  &kp C             &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                          &kp LEFT_CONTROL  &mo 2  &kp SPACE    &kp RET  &mo 1  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE       &kp N1           &kp N2       &kp N3    &kp N4      &kp N5         &kp N6     &kp N7         &kp N8        &kp N9                &kp N0                 &kp BSPC
&trans          &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH
&kp LEFT_SHIFT  &trans           &trans       &kp PLUS  &kp UNDER   &trans         &trans     &kp MINUS      &kp EQUAL     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
                                              &trans    &trans      &kp SPACE      &kp RET    &trans         &kp RALT
            >;
        };

        lower_layer {
            bindings = <
&bt BT_CLR         &bt BT_SEL 0     &bt BT_SEL 1     &kp C_MUTE       &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &kp PG_UP  &kp HOME        &kp UP_ARROW    &kp END          &kp PG_DN  &kp DEL
&ext_power EP_TOG  &bl BL_TOG       &bl BL_DEC       &bl BL_INC       &trans             &trans             &trans     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans     &trans
&kp LEFT_SHIFT     &rgb_ug RGB_TOG  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_EFR    &rgb_ug RGB_EFF    &trans     &trans          &trans          &trans           &trans     &soft_off
                                                     &trans           &trans             &trans             &trans     &trans          &trans
            >;
        };

        functions_layer {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&to 4   &to 5   &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        soundpad_layer {
            bindings = <
&to 0   &kp F13  &kp F14  &kp F15  &kp F16  &kp F17    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F18  &kp F19  &kp F20  &kp F21  &kp F22    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F23  &kp F24  &trans   &trans   &trans     &trans  &trans  &trans  &trans  &trans  &trans
                          &trans   &trans   &trans     &trans  &trans  &trans
            >;
        };

        repo_layer {
            bindings = <
&kp TAB         &kp Q   &kp W   &kp E      &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&repo_jump      &kp A   &kp S   &kp D      &trans  &trans       &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp N1  &kp N2  &kp N3     &trans  &trans       &trans  &trans  &trans  &trans  &trans  &kp ESCAPE
                                &kp LCTRL  &mo 4   &kp SPACE    &trans  &none   &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        functions_layer_activation {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
